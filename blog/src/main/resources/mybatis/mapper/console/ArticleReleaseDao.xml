<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sbsm.blog.dao.console.ArticleReleaseDao">


    <insert id="insert" parameterType="com.sbsm.blog.entity.console.ArticleRelease">
        <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO `article_release`(`create_time`, `update_time`, `remark`, `del_flag`, `title`, `descn`,
        `content`, `img_url`, `is_comment`, `is_recommend`, `is_top`, `browse_num`, `comment_num`, `like_num`,
        `ar_id`, `version`, `cid` ) VALUES (#{createTime}, #{updateTime}, #{remark}, #{delFlag}, #{title}, #{descn},
        #{content}, #{imgUrl}, #{isComment}, #{isRecommend}, #{isTop}, #{browseNum}, #{commentNum}, #{likeNum},
        #{arId}, #{version}, #{cid})
    </insert>

    <update id="update">
        UPDATE `article_release`
        SET
        `update_time` = #{updateTime},
        <if test="remark != null and remark != ''">
            `remark` = #{remark},
        </if>
        `title` = #{title},
        `descn` = #{descn},
        `content` = #{content},
        `img_url` = #{imgUrl},
        `version` = #{version},
        `cid` = #{cid}
        WHERE
            `id` = #{id};
    </update>

    <update id="updateBoolean">
         UPDATE `article_release`
        <set>
            <if test="isComment != null">
                is_comment = #{isComment},
            </if>
            <if test="isRecommend != null">
                is_recommend = #{isRecommend},
            </if>
            <if test="isTop != null">
                is_top = #{isTop},
            </if>
        </set>
        WHERE
         `id` = #{id}
    </update>

    <update id="delete">
         UPDATE `article_release`
         SET
         `update_time` = now(),
         `del_flag`=true
        WHERE
         `id` = #{arg0}
    </update>

    <sql id="columns">
        `create_time` createTime, `update_time` updateTime, `ar_id` arId,
        `img_url` imgUrl, `is_comment` isComment, `is_recommend` isRecommend, `is_top` isTop, `browse_num` browseNum, `comment_num` commentNum, `like_num` likeNum
    </sql>

    <select id="countByDelFlag" resultType="Integer">
        select count(*) from `article_release` where  `del_flag`=#{arg0}
    </select>

    <select id="findPage" resultType="com.sbsm.blog.entity.console.ArticleRelease">
        select *, <include refid="columns" /> from `article_release` where  `del_flag`=0
        order by `update_time` desc
        limit #{arg0}, #{arg1}
    </select>

    <select id="findOne" resultType="com.sbsm.blog.entity.console.ArticleRelease">
        select *, <include refid="columns" /> from `article_release`
        <where>
            <if test="id != null">
                and `id` = #{id}
            </if>
            <if test="arId != null and arId != ''">
                and `ar_id` = #{arId}
            </if>
        </where>
        limit 0,1
    </select>

    <select id="findByIds" resultType="com.sbsm.blog.entity.console.ArticleRelease">
        select *, <include refid="columns" /> from `article_release`
        where `id` in
        <foreach collection="array" open="(" separator="," close=")" item="item">
            #{item}
        </foreach>
    </select>



</mapper>